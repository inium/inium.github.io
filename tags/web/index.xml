<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>web on inlee's blog</title><link>https://inium.github.io/tags/web/</link><description>Recent content in web on inlee's blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><copyright>Copyright © 2008–2019, Steve Francia and the lee.so; all rights reserved.</copyright><lastBuildDate>Fri, 03 Apr 2020 19:59:23 +0000</lastBuildDate><atom:link href="https://inium.github.io/tags/web/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker를 이용한 Reverse Proxy 서버 구성 및 자동화</title><link>https://inium.github.io/2020/04/docker-nginx-certbot/</link><pubDate>Fri, 03 Apr 2020 19:59:23 +0000</pubDate><guid>https://inium.github.io/2020/04/docker-nginx-certbot/</guid><description>이 글은 Docker를 이용해 NginX Reverse Proxy 서버를 구성한 후 2개의 웹 어플리케이션(Node.js App, phpmyadmin)과 MySQL을 설한 방법에 대한 내용이다. 그리고 웹 어플리케이션에 사용한 Let&amp;rsquo;s Encrypt 인증서 발급 및 갱신, 확인 과정을 추가하였으며 마지막으로 이들을 자동화한 방법에 대해 소개하고자 한다.
배경 기존 위의 그림과 같이 Docker NginX(Reverse Proxy), 어플리케이션들, DB를 설정하여 사용했었다. docker compose를 이용하면 설정파일(.yml)에 정의한 Container 들이 한번에 실행이 가능해 자동화 할 수 있으나 NginX 환경설정 파일(.conf)의 도메인 이름과 인증서 저장 경로는 프로젝트에 의존적인 값이기 때문에 항상 수동으로 직접 입력하여 사용하였다.</description></item></channel></rss>