<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on inlee's blog</title><link>https://inium.github.io/categories/docker/</link><description>Recent content in docker on inlee's blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><copyright>Copyright © 2008–2019, Steve Francia and the lee.so; all rights reserved.</copyright><lastBuildDate>Sun, 19 Apr 2020 02:37:43 +0000</lastBuildDate><atom:link href="https://inium.github.io/categories/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>PHP Dockerfile 만들기 (with Laravel, Xdebug, vscode)</title><link>https://inium.github.io/2020/04/docker-php-laravel-xdebug-vscode/</link><pubDate>Sun, 19 Apr 2020 02:37:43 +0000</pubDate><guid>https://inium.github.io/2020/04/docker-php-laravel-xdebug-vscode/</guid><description>PHP docker 공식 이미지는 PHP만 제공하기 때문에 추가로 필요한 패키지들은 별도로 설치하여 사용해야 한다. 그리고 Laravel과 같이 특정 라이브러리들을 필수로 하는 프레임워크도 있기 때문에 대부분의 사용자들은 패키지들을 추가한 Dockerfile을 정의하여 사용한다.
이 글은 PHP docker 공식 이미지에 일반 PHP와 Laravel 기반의 어플리케이션 개발/운영 환경을 포함하는 Dockerfile을 만든 내용이다.이를 위해 PHP에서 필수라 생각되는 패키지와 Laravel에서 요구하는 필수 패키지 설치와 실행 설정을 하였다. 추가로 PHP 코드 디버깅(Debugging)을 위한 Xdebug 설정과 Visual Studio Code 에서의 설정을 하였다.</description></item><item><title>Docker를 이용한 Reverse Proxy 서버 구성 및 자동화</title><link>https://inium.github.io/2020/04/docker-nginx-certbot/</link><pubDate>Fri, 03 Apr 2020 19:59:23 +0000</pubDate><guid>https://inium.github.io/2020/04/docker-nginx-certbot/</guid><description>이 글은 Docker를 이용해 NginX Reverse Proxy 서버를 구성한 후 2개의 웹 어플리케이션(Node.js App, phpmyadmin)과 MySQL을 설한 방법에 대한 내용이다. 그리고 웹 어플리케이션에 사용한 Let&amp;rsquo;s Encrypt 인증서 발급 및 갱신, 확인 과정을 추가하였으며 마지막으로 이들을 자동화한 방법에 대해 소개하고자 한다.
배경 기존 위의 그림과 같이 Docker NginX(Reverse Proxy), 어플리케이션들, DB를 설정하여 사용했었다. docker compose를 이용하면 설정파일(.yml)에 정의한 Container 들이 한번에 실행이 가능해 자동화 할 수 있으나 NginX 환경설정 파일(.conf)의 도메인 이름과 인증서 저장 경로는 프로젝트에 의존적인 값이기 때문에 항상 수동으로 직접 입력하여 사용하였다.</description></item></channel></rss>